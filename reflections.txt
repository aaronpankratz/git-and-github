Aaron's Version Control lesson 1 Reflections

1. How did viewing a diff between two versions of a file help you spot the bug?

It was helpful because the diff reduced parts of the file that I wasn't concerned with. Reducing noise made it easier to focus on the lines of the file that contained the bug.

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

The entire history of a file includes all development and bug fix changes. If you learn from the history of the file then you will be less likely to repeat development mistakes that resulted in bugs.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

pros: easier to understand version history since each commit should be commented and encapsulate one logical change.

cons: manual process means there is greater risk of user error.

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Saving multiple files in one commit allows the user to group together files that have a common change. This makes it easier to organize and understand a set of changes to multiple files.

5. How can you use the commands git log and git diff to view the history of files?

The git log command allows you to view the time ordered sequence of commits and who authored those commits. The git diff command shows you which lines changed and the content of those changes between commits.
