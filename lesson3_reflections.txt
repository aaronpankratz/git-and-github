1. When would you want to use a remote repository rather than keeping all your work local?

When you want to share your work with the public.

2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

If Git were to automatically stay up-to-date then it may iterrupt the workflow of a user. The user would have to read all of the new commits whenever Git pulled them down and all of the context switching would be disruptive.

3. Describe the differences between forks, clones, and branches. When would you use one instead of another?

The clone operation creates a local copy of a repository.
A branch creates a copy of the latest commit in a repository.
A fork creates a clone of a repository on github and links back to the repository being cloned from.

4. What is the benefit of having a copy of the last known state of the remote stored locally?

You can operate on all the remote commits without needing access to the internet.

5. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would probably use a cloud file sharing service like dropbox or google docs/drive. It would be easier to edit the same file in real time with google docs. It would be harder to merge offline edits.

6. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When other people are working in the same repository. The benefit of working in a separate branch is that you can create pull requests to have peers review your commits before they are integrated into the master branch. The benefit of working directly in the master branch is that it is less complex.
